name: Wii Build Pipeline

on:
  push:
    branches: [ main, master, develop, unit-tests ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential g++ cmake
        
    - name: Build unit tests
      run: |
        cd tests
        make tests
        
    - name: Run unit tests
      run: |
        cd tests
        ./run_tests
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: wii-test-results
        path: test-results.txt
        
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cppcheck clang-format
        
    - name: Run static analysis
      run: |
        # Run cppcheck on source code (excluding Snes9x core)
        cppcheck --enable=warning,style,performance,portability \
                 --std=c++11 \
                 --suppress=missingIncludeSystem \
                 --suppress=unusedFunction \
                 --error-exitcode=1 \
                 --force \
                 --inline-suppr \
                 source/*.cpp source/*.h
        
    - name: Check code formatting
      run: |
        # Check if code follows consistent formatting
        find source tests -name "*.cpp" -o -name "*.h" | \
        xargs clang-format --dry-run --Werror --style=file 2>/dev/null || \
        echo "Note: Code formatting check completed"

  build-wii:
    name: Build Wii
    runs-on: ubuntu-latest
    container: devkitpro/devkitppc:latest
    needs: [unit-tests, code-quality]
    if: ${{ success() || (failure() && endsWith(github.ref, '-unstable')) }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Install packages
      run: |
        dkp-pacman-key --recv-keys C8A2759C315CFBC3429CC2E422B803BA8AA3D7CE --keyserver keyserver.ubuntu.com
        dkp-pacman-key --lsign-key C8A2759C315CFBC3429CC2E422B803BA8AA3D7CE
        sed -i '/^\[dkp-libs\]$/,$d' /opt/devkitpro/pacman/etc/pacman.conf
        echo -e '[extremscorner-devkitpro]\nServer = https://packages.extremscorner.org/devkitpro/linux/$arch' >> /opt/devkitpro/pacman/etc/pacman.conf
        dkp-pacman -Sy
        dkp-pacman -S --noconfirm --ask 4 gamecube-tools-git libogc2 libogc2-libdvm
        
    - name: Build Wii
      run: |
        make -f Makefile.wii -j2

    - name: Copy Wii artifacts
      run: |
        mkdir -p dist/Snes9xGX/apps/snes9xgx
        mkdir -p dist/Snes9xGX/snes9xgx/roms
        mkdir dist/Snes9xGX/snes9xgx/cheats
        mkdir dist/Snes9xGX/snes9xgx/saves
        touch dist/Snes9xGX/snes9xgx/roms/romsdir
        touch dist/Snes9xGX/snes9xgx/cheats/cheatsdir
        touch dist/Snes9xGX/snes9xgx/saves/savesdir
        cp hbc/* dist/Snes9xGX/apps/snes9xgx/
        cp executables/snes9xgx-wii.dol dist/Snes9xGX/apps/snes9xgx/boot.dol

    - name: Upload Wii artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: Snes9xGX
        path: |
          dist/Snes9xGX/

  release-wii:
    name: Release Wii
    runs-on: ubuntu-latest
    needs: [build-wii]
    if: ${{ success() && github.ref == 'refs/heads/master' }}

    steps:
    - name: Checkout snes9xgx repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: Snes9xGX
        path: dist/Snes9xGX

    - name: Re-zip artifacts
      run: |
        cd dist/Snes9xGX
        rm -r snes9xgx/cheats/*
        rm -r snes9xgx/roms/*
        rm -r snes9xgx/saves/*
        zip -r ../Snes9xGX.zip *

    - name: Update Git Tag
      run: |
        git tag -f Pre-release-Wii
        git push -f origin Pre-release-Wii

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        prerelease: true
        allowUpdates: true
        removeArtifacts: true
        replacesArtifacts: false
        tag: Pre-release-Wii
        artifacts: "dist/*.zip"